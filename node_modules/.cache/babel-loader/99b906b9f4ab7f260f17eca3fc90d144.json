{"ast":null,"code":"// // // import React from \"react\";\n// // // import TransactionsList from \"./TransactionsList\";\n// // // import Search from \"./Search\";\n// // // import AddTransactionForm from \"./AddTransactionForm\";\n// // // function AccountContainer() {\n// // //   return (\n// // //     <div>\n// // //       <Search />\n// // //       <AddTransactionForm />\n// // //       <TransactionsList />\n// // //     </div>\n// // //   );\n// // // }\n// // // export default AccountContainer;\n// // This achieved the first deliverable\n// // // AccountContainer.js\n// // import React, {useState} from \"react\";\n// // import TransactionsList from \"./TransactionsList\";\n// // import Search from \"./Search\";\n// // import AddTransactionForm from \"./AddTransactionForm\";\n// // function AccountContainer() {\n// //   const [transactions, listTransactions] = useState([]);\n// //   const handleAddTransaction = (newTransaction) => {\n// //     // Add logic to handle the new transaction data, for now, just log it\n// //     listTransactions([...transactions, newTransaction]);\n// //     console.log(\"New transaction data:\", newTransaction);\n// //   };\n// //   return (\n// //     <div>\n// //       <Search />\n// //       <AddTransactionForm onAddTransaction={handleAddTransaction} transactions={transactions}/>\n// //       <TransactionsList />\n// //     </div>\n// //   );\n// // }\n// // export default AccountContainer;\n// // This achieved the second deliverable\n// // // AccountContainer.js\n// // import React, { useState } from \"react\";\n// // import TransactionsList from \"./TransactionsList\";\n// // import Search from \"./Search\";\n// // import AddTransactionForm from \"./AddTransactionForm\";\n// // function AccountContainer() {\n// //   const [transactions, setTransactions] = useState([]);\n// //   const handleAddTransaction = (newTransaction) => {\n// //     // Update state to include the new transaction\n// //     setTransactions([...transactions, newTransaction]);\n// //     // Post the new transaction to the backend API for persistence\n// //     fetch(\"http://localhost:8001/transactions\", {\n// //       method: \"POST\",\n// //       headers: {\n// //         \"Content-Type\": \"application/json\",\n// //       },\n// //       body: JSON.stringify(newTransaction),\n// //     })\n// //       .then((response) => response.json())\n// //       .then((data) => console.log(\"Transaction posted successfully:\", data))\n// //       .catch((error) => console.error(\"Error posting transaction:\", error));\n// //   };\n// //   return (\n// //     <div>\n// //       <Search />\n// //       <AddTransactionForm onAddTransaction={handleAddTransaction} />\n// //       <TransactionsList onUpdateTransactions={setTransactions} />\n// //     </div>\n// //   );\n// // }\n// // export default AccountContainer;\n// // AccountContainer.js\n// import React, { useState, useEffect } from \"react\";\n// import TransactionsList from \"./TransactionsList\";\n// import Search from \"./Search\";\n// import AddTransactionForm from \"./AddTransactionForm\";\n// function AccountContainer() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [filteredTransactions, setFilteredTransactions] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const handleAddTransaction = (newTransaction) => {\n//     setTransactions([...transactions, newTransaction]);\n//     fetch(\"http://localhost:8001/transactions\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newTransaction),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => console.log(\"Transaction posted successfully:\", data))\n//       .catch((error) => console.error(\"Error posting transaction:\", error));\n//   };\n//   const handleSearch = (term) => {\n//     setSearchTerm(term);\n//   };\n//   useEffect(() => {\n//     // Filter transactions based on the search term\n//     const filtered = transactions.filter((transaction) =>\n//       transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     setFilteredTransactions(filtered);\n//   }, [transactions, searchTerm]);\n//   return (\n//     <div>\n//       <Search onSearch={handleSearch} />\n//       <AddTransactionForm onAddTransaction={handleAddTransaction} />\n//       <TransactionsList\n//         transactions={searchTerm ? filteredTransactions : transactions}\n//         onUpdateTransactions={setTransactions}\n//       />\n//     </div>\n//   );\n// }\n// export default AccountContainer;","map":{"version":3,"sources":["/home/moringa/Documents/Phase 2/Has to work code challenge/phase-2-hooks-code-challenge-bank-of-flatiron-KevinKiseli/src/components/AccountContainer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// // // import React from \"react\";\n// // // import TransactionsList from \"./TransactionsList\";\n// // // import Search from \"./Search\";\n// // // import AddTransactionForm from \"./AddTransactionForm\";\n\n// // // function AccountContainer() {\n// // //   return (\n// // //     <div>\n// // //       <Search />\n// // //       <AddTransactionForm />\n// // //       <TransactionsList />\n// // //     </div>\n// // //   );\n// // // }\n\n// // // export default AccountContainer;\n\n\n\n\n\n\n\n\n// // This achieved the first deliverable\n\n// // // AccountContainer.js\n\n// // import React, {useState} from \"react\";\n// // import TransactionsList from \"./TransactionsList\";\n// // import Search from \"./Search\";\n// // import AddTransactionForm from \"./AddTransactionForm\";\n\n// // function AccountContainer() {\n\n// //   const [transactions, listTransactions] = useState([]);\n\n// //   const handleAddTransaction = (newTransaction) => {\n// //     // Add logic to handle the new transaction data, for now, just log it\n// //     listTransactions([...transactions, newTransaction]);\n// //     console.log(\"New transaction data:\", newTransaction);\n// //   };\n\n// //   return (\n// //     <div>\n// //       <Search />\n// //       <AddTransactionForm onAddTransaction={handleAddTransaction} transactions={transactions}/>\n// //       <TransactionsList />\n// //     </div>\n// //   );\n// // }\n\n// // export default AccountContainer;\n\n\n\n\n\n\n// // This achieved the second deliverable\n\n// // // AccountContainer.js\n\n// // import React, { useState } from \"react\";\n// // import TransactionsList from \"./TransactionsList\";\n// // import Search from \"./Search\";\n// // import AddTransactionForm from \"./AddTransactionForm\";\n\n// // function AccountContainer() {\n// //   const [transactions, setTransactions] = useState([]);\n\n// //   const handleAddTransaction = (newTransaction) => {\n// //     // Update state to include the new transaction\n// //     setTransactions([...transactions, newTransaction]);\n\n// //     // Post the new transaction to the backend API for persistence\n// //     fetch(\"http://localhost:8001/transactions\", {\n// //       method: \"POST\",\n// //       headers: {\n// //         \"Content-Type\": \"application/json\",\n// //       },\n// //       body: JSON.stringify(newTransaction),\n// //     })\n// //       .then((response) => response.json())\n// //       .then((data) => console.log(\"Transaction posted successfully:\", data))\n// //       .catch((error) => console.error(\"Error posting transaction:\", error));\n// //   };\n\n// //   return (\n// //     <div>\n// //       <Search />\n// //       <AddTransactionForm onAddTransaction={handleAddTransaction} />\n// //       <TransactionsList onUpdateTransactions={setTransactions} />\n// //     </div>\n// //   );\n// // }\n\n// // export default AccountContainer;\n\n\n\n// // AccountContainer.js\n\n// import React, { useState, useEffect } from \"react\";\n// import TransactionsList from \"./TransactionsList\";\n// import Search from \"./Search\";\n// import AddTransactionForm from \"./AddTransactionForm\";\n\n// function AccountContainer() {\n//   const [transactions, setTransactions] = useState([]);\n//   const [filteredTransactions, setFilteredTransactions] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n\n//   const handleAddTransaction = (newTransaction) => {\n//     setTransactions([...transactions, newTransaction]);\n\n//     fetch(\"http://localhost:8001/transactions\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify(newTransaction),\n//     })\n//       .then((response) => response.json())\n//       .then((data) => console.log(\"Transaction posted successfully:\", data))\n//       .catch((error) => console.error(\"Error posting transaction:\", error));\n//   };\n\n//   const handleSearch = (term) => {\n//     setSearchTerm(term);\n//   };\n\n//   useEffect(() => {\n//     // Filter transactions based on the search term\n//     const filtered = transactions.filter((transaction) =>\n//       transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     setFilteredTransactions(filtered);\n//   }, [transactions, searchTerm]);\n\n//   return (\n//     <div>\n//       <Search onSearch={handleSearch} />\n//       <AddTransactionForm onAddTransaction={handleAddTransaction} />\n//       <TransactionsList\n//         transactions={searchTerm ? filteredTransactions : transactions}\n//         onUpdateTransactions={setTransactions}\n//       />\n//     </div>\n//   );\n// }\n\n// export default AccountContainer;\n\n\n"]},"metadata":{},"sourceType":"module"}