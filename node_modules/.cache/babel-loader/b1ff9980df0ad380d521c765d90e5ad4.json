{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/moringa/Documents/Phase 2/Has to work code challenge/phase-2-hooks-code-challenge-bank-of-flatiron-KevinKiseli/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\n// // import React from \"react\";\n// // import Transaction from \"./Transaction\";\n// // function TransactionsList() {\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {/* render a list of <Transaction> components here */}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n// // export default TransactionsList;\n// // This achieved the 1st deliverable\n// // TransactionsList.js\n// // import React, { useEffect, useState } from \"react\";\n// // import Transaction from \"./Transaction\";\n// // function TransactionsList() {\n// //   const [transactionsData, setTransactionsData] = useState([]);\n// //   useEffect(() => {\n// //     // Fetch data from the provided JSON server\n// //     fetch(\"http://localhost:8001/transactions\")\n// //       .then((response) => {\n// //         if (!response.ok) {\n// //           throw new Error(`HTTP error! Status: ${response.status}`);\n// //         }\n// //         return response.json();\n// //       })\n// //       .then((data) => {\n// //         setTransactionsData(data);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Error fetching data:\", error);\n// //       });\n// //   }, []);\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n// // export default TransactionsList;\n// // // TransactionsList.js\n// // import React, { useEffect, useState } from \"react\";\n// // import Transaction from \"./Transaction\";\n// // function TransactionsList({ onUpdateTransactions }) {\n// //   const [transactionsData, setTransactionsData] = useState([]);\n// //   useEffect(() => {\n// //     // Fetch data from the provided JSON server\n// //     fetch(\"http://localhost:8001/transactions\")\n// //       .then((response) => {\n// //         if (!response.ok) {\n// //           throw new Error(`HTTP error! Status: ${response.status}`);\n// //         }\n// //         return response.json();\n// //       })\n// //       .then((data) => {\n// //         setTransactionsData(data);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Error fetching data:\", error);\n// //       });\n// //   }, []);\n// //   // Function to update transactions list after adding a new transaction\n// //   const updateTransactionsList = (newTransaction) => {\n// //     setTransactionsData([...transactionsData, newTransaction]);\n// //     onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n// //   };\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       {/* Existing transactions */}\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n// // export default TransactionsList;\n// // TransactionsList.js\n// import React, { useEffect, useState } from \"react\";\n// import Transaction from \"./Transaction\";\n// function TransactionsList({ transactions, onUpdateTransactions }) {\n//   // Function to update transactions list after adding a new transaction\n//   const updateTransactionsList = (newTransaction) => {\n//     onUpdateTransactions([...transactions, newTransaction]); // Update parent state\n//   };\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       {/* Existing transactions */}\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {transactions.map((transaction) => (\n//           <Transaction\n//             key={transaction.id}\n//             date={transaction.date}\n//             description={transaction.description}\n//             category={transaction.category}\n//             amount={transaction.amount}\n//           />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n// export default TransactionsList;\n//TransactionsList\nimport React, { useEffect, useState } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList({\n  onUpdateTransactions\n}) {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  useEffect(() => {\n    // Fetch data from the provided JSON server\n    fetch(\"http://localhost:8001/transactions\").then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      return response.json();\n    }).then(data => {\n      setTransactionsData(data);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []); // Function to update transactions list after adding a new transaction\n\n  const updateTransactionsList = newTransaction => {\n    setTransactionsData([...transactionsData, newTransaction]);\n    onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"ui celled striped padded table\",\n    children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"ui center aligned header\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), transactionsData.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n        date: transaction.date,\n        description: transaction.description,\n        category: transaction.category,\n        amount: transaction.amount\n      }, transaction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"J7T/y+KSilPhGGzZGQp0ZT0z5Q4=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/moringa/Documents/Phase 2/Has to work code challenge/phase-2-hooks-code-challenge-bank-of-flatiron-KevinKiseli/src/components/TransactionsList.js"],"names":["React","useEffect","useState","Transaction","TransactionsList","onUpdateTransactions","transactionsData","setTransactionsData","fetch","then","response","ok","Error","status","json","data","catch","error","console","updateTransactionsList","newTransaction","map","transaction","date","description","category","amount","id"],"mappings":";;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAoD;AAAA;;AAClD,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,EAAD,CAAxD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAW,uBAAsBF,QAAQ,CAACG,MAAO,EAAjD,CAAN;AACD;;AACD,aAAOH,QAAQ,CAACI,IAAT,EAAP;AACD,KANH,EAOGL,IAPH,CAOSM,IAAD,IAAU;AACdR,MAAAA,mBAAmB,CAACQ,IAAD,CAAnB;AACD,KATH,EAUGC,KAVH,CAUUC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD,KAZH;AAaD,GAfQ,EAeN,EAfM,CAAT,CAHkD,CAoBlD;;AACA,QAAME,sBAAsB,GAAIC,cAAD,IAAoB;AACjDb,IAAAA,mBAAmB,CAAC,CAAC,GAAGD,gBAAJ,EAAsBc,cAAtB,CAAD,CAAnB;AACAf,IAAAA,oBAAoB,CAAC,CAAC,GAAGC,gBAAJ,EAAsBc,cAAtB,CAAD,CAApB,CAFiD,CAEY;AAC9D,GAHD;;AAKA,sBACE;AAAO,IAAA,SAAS,EAAC,gCAAjB;AAAA,2BAEE;AAAA,8BACE;AAAA,gCACE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE;AAAA,iCACE;AAAI,YAAA,SAAS,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAeGd,gBAAgB,CAACe,GAAjB,CAAsBC,WAAD,iBACpB,QAAC,WAAD;AAEE,QAAA,IAAI,EAAEA,WAAW,CAACC,IAFpB;AAGE,QAAA,WAAW,EAAED,WAAW,CAACE,WAH3B;AAIE,QAAA,QAAQ,EAAEF,WAAW,CAACG,QAJxB;AAKE,QAAA,MAAM,EAAEH,WAAW,CAACI;AALtB,SACOJ,WAAW,CAACK,EADnB;AAAA;AAAA;AAAA;AAAA,cADD,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAxDQvB,gB;;KAAAA,gB;AA0DT,eAAeA,gBAAf","sourcesContent":["// // import React from \"react\";\n// // import Transaction from \"./Transaction\";\n\n// // function TransactionsList() {\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {/* render a list of <Transaction> components here */}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n\n// // export default TransactionsList;\n\n\n\n\n// // This achieved the 1st deliverable\n\n\n// // TransactionsList.js\n\n// // import React, { useEffect, useState } from \"react\";\n// // import Transaction from \"./Transaction\";\n\n// // function TransactionsList() {\n// //   const [transactionsData, setTransactionsData] = useState([]);\n\n// //   useEffect(() => {\n// //     // Fetch data from the provided JSON server\n// //     fetch(\"http://localhost:8001/transactions\")\n// //       .then((response) => {\n// //         if (!response.ok) {\n// //           throw new Error(`HTTP error! Status: ${response.status}`);\n// //         }\n// //         return response.json();\n// //       })\n// //       .then((data) => {\n// //         setTransactionsData(data);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Error fetching data:\", error);\n// //       });\n// //   }, []);\n\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n\n\n// // export default TransactionsList;\n\n\n\n\n// // // TransactionsList.js\n\n// // import React, { useEffect, useState } from \"react\";\n// // import Transaction from \"./Transaction\";\n\n// // function TransactionsList({ onUpdateTransactions }) {\n// //   const [transactionsData, setTransactionsData] = useState([]);\n\n// //   useEffect(() => {\n// //     // Fetch data from the provided JSON server\n// //     fetch(\"http://localhost:8001/transactions\")\n// //       .then((response) => {\n// //         if (!response.ok) {\n// //           throw new Error(`HTTP error! Status: ${response.status}`);\n// //         }\n// //         return response.json();\n// //       })\n// //       .then((data) => {\n// //         setTransactionsData(data);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Error fetching data:\", error);\n// //       });\n// //   }, []);\n\n// //   // Function to update transactions list after adding a new transaction\n// //   const updateTransactionsList = (newTransaction) => {\n// //     setTransactionsData([...transactionsData, newTransaction]);\n// //     onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n// //   };\n\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       {/* Existing transactions */}\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n\n// // export default TransactionsList;\n\n\n\n\n\n// // TransactionsList.js\n\n// import React, { useEffect, useState } from \"react\";\n// import Transaction from \"./Transaction\";\n\n// function TransactionsList({ transactions, onUpdateTransactions }) {\n//   // Function to update transactions list after adding a new transaction\n//   const updateTransactionsList = (newTransaction) => {\n//     onUpdateTransactions([...transactions, newTransaction]); // Update parent state\n//   };\n\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       {/* Existing transactions */}\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {transactions.map((transaction) => (\n//           <Transaction\n//             key={transaction.id}\n//             date={transaction.date}\n//             description={transaction.description}\n//             category={transaction.category}\n//             amount={transaction.amount}\n//           />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// export default TransactionsList;\n\n\n\n\n\n\n//TransactionsList\n\nimport React, { useEffect, useState } from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList({ onUpdateTransactions }) {\n  const [transactionsData, setTransactionsData] = useState([]);\n\n  useEffect(() => {\n    // Fetch data from the provided JSON server\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setTransactionsData(data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  // Function to update transactions list after adding a new transaction\n  const updateTransactionsList = (newTransaction) => {\n    setTransactionsData([...transactionsData, newTransaction]);\n    onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n  };\n\n  return (\n    <table className=\"ui celled striped padded table\">\n      {/* Existing transactions */}\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Description</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Category</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n        </tr>\n        {transactionsData.map((transaction) => (\n          <Transaction\n            key={transaction.id}\n            date={transaction.date}\n            description={transaction.description}\n            category={transaction.category}\n            amount={transaction.amount}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}