{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/moringa/Documents/Phase 2/Has to work code challenge/phase-2-hooks-code-challenge-bank-of-flatiron-KevinKiseli/src/components/TransactionsList.js\",\n    _s = $RefreshSig$();\n\n// // import React from \"react\";\n// // import Transaction from \"./Transaction\";\n// // function TransactionsList() {\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {/* render a list of <Transaction> components here */}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n// // export default TransactionsList;\n// // This achieved the 1st deliverable\n// // TransactionsList.js\n// // import React, { useEffect, useState } from \"react\";\n// // import Transaction from \"./Transaction\";\n// // function TransactionsList() {\n// //   const [transactionsData, setTransactionsData] = useState([]);\n// //   useEffect(() => {\n// //     // Fetch data from the provided JSON server\n// //     fetch(\"http://localhost:8001/transactions\")\n// //       .then((response) => {\n// //         if (!response.ok) {\n// //           throw new Error(`HTTP error! Status: ${response.status}`);\n// //         }\n// //         return response.json();\n// //       })\n// //       .then((data) => {\n// //         setTransactionsData(data);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Error fetching data:\", error);\n// //       });\n// //   }, []);\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n// // export default TransactionsList;\n// // // TransactionsList.js\n// // import React, { useEffect, useState } from \"react\";\n// // import Transaction from \"./Transaction\";\n// // function TransactionsList({ onUpdateTransactions }) {\n// //   const [transactionsData, setTransactionsData] = useState([]);\n// //   useEffect(() => {\n// //     // Fetch data from the provided JSON server\n// //     fetch(\"http://localhost:8001/transactions\")\n// //       .then((response) => {\n// //         if (!response.ok) {\n// //           throw new Error(`HTTP error! Status: ${response.status}`);\n// //         }\n// //         return response.json();\n// //       })\n// //       .then((data) => {\n// //         setTransactionsData(data);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Error fetching data:\", error);\n// //       });\n// //   }, []);\n// //   // Function to update transactions list after adding a new transaction\n// //   const updateTransactionsList = (newTransaction) => {\n// //     setTransactionsData([...transactionsData, newTransaction]);\n// //     onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n// //   };\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       {/* Existing transactions */}\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n// // export default TransactionsList;\n// // TransactionsList.js\n// import React, { useEffect, useState } from \"react\";\n// import Transaction from \"./Transaction\";\n// function TransactionsList({ transactions, onUpdateTransactions }) {\n//   // Function to update transactions list after adding a new transaction\n//   const updateTransactionsList = (newTransaction) => {\n//     onUpdateTransactions([...transactions, newTransaction]); // Update parent state\n//   };\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       {/* Existing transactions */}\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {transactions.map((transaction) => (\n//           <Transaction\n//             key={transaction.id}\n//             date={transaction.date}\n//             description={transaction.description}\n//             category={transaction.category}\n//             amount={transaction.amount}\n//           />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n// export default TransactionsList;\n// //TransactionsList\n// import React, { useEffect, useState } from \"react\";\n// import Transaction from \"./Transaction\";\n// function TransactionsList({ onUpdateTransactions }) {\n//   const [transactionsData, setTransactionsData] = useState([]);\n//   useEffect(() => {\n//     // Fetch data from the provided JSON server\n//     fetch(\"http://localhost:8001/transactions\")\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setTransactionsData(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//       });\n//   }, []);\n//   // Function to update transactions list after adding a new transaction\n//   const updateTransactionsList = (newTransaction) => {\n//     setTransactionsData([...transactionsData, newTransaction]);\n//     onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n//   };\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       {/* Existing transactions */}\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {transactionsData.map((transaction) => (\n//           <Transaction\n//             key={transaction.id}\n//             date={transaction.date}\n//             description={transaction.description}\n//             category={transaction.category}\n//             amount={transaction.amount}\n//           />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n// export default TransactionsList;\nimport React, { useEffect, useState } from \"react\";\nimport Transaction from \"./Transaction\";\nimport Search from \"./Search\";\n\nfunction TransactionsList({\n  onUpdateTransactions\n}) {\n  _s();\n\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    // Fetch data from the provided JSON server\n    fetch(\"http://localhost:8001/transactions\").then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      return response.json();\n    }).then(data => {\n      setTransactionsData(data);\n      filterTransactions(data, searchTerm);\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, [searchTerm]); // Function to update transactions list after adding a new transaction\n\n  const updateTransactionsList = newTransaction => {\n    setTransactionsData([...transactionsData, newTransaction]);\n    onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n\n    filterTransactions([...transactionsData, newTransaction], searchTerm);\n  };\n\n  const filterTransactions = (data, term) => {\n    const filtered = data.filter(transaction => transaction.description.toLowerCase().includes(term.toLowerCase()));\n    setFilteredTransactions(filtered);\n  };\n\n  const handleSearch = term => {\n    setSearchTerm(term);\n    filterTransactions(transactionsData, term);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ui celled striped padded table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"ui center aligned header\",\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this), filteredTransactions.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n          date: transaction.date,\n          description: transaction.description,\n          category: transaction.category,\n          amount: transaction.amount\n        }, transaction.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionsList, \"laOv6kamaj9NdAAQTCdFkOgg3nY=\");\n\n_c = TransactionsList;\nexport default TransactionsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsList\");","map":{"version":3,"sources":["/home/moringa/Documents/Phase 2/Has to work code challenge/phase-2-hooks-code-challenge-bank-of-flatiron-KevinKiseli/src/components/TransactionsList.js"],"names":["React","useEffect","useState","Transaction","Search","TransactionsList","onUpdateTransactions","transactionsData","setTransactionsData","filteredTransactions","setFilteredTransactions","searchTerm","setSearchTerm","fetch","then","response","ok","Error","status","json","data","filterTransactions","catch","error","console","updateTransactionsList","newTransaction","term","filtered","filter","transaction","description","toLowerCase","includes","handleSearch","map","date","category","amount","id"],"mappings":";;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA,OAAOA,KAAP,IAAg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","sourcesContent":["// // import React from \"react\";\n// // import Transaction from \"./Transaction\";\n\n// // function TransactionsList() {\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {/* render a list of <Transaction> components here */}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n\n// // export default TransactionsList;\n\n\n\n\n// // This achieved the 1st deliverable\n\n\n// // TransactionsList.js\n\n// // import React, { useEffect, useState } from \"react\";\n// // import Transaction from \"./Transaction\";\n\n// // function TransactionsList() {\n// //   const [transactionsData, setTransactionsData] = useState([]);\n\n// //   useEffect(() => {\n// //     // Fetch data from the provided JSON server\n// //     fetch(\"http://localhost:8001/transactions\")\n// //       .then((response) => {\n// //         if (!response.ok) {\n// //           throw new Error(`HTTP error! Status: ${response.status}`);\n// //         }\n// //         return response.json();\n// //       })\n// //       .then((data) => {\n// //         setTransactionsData(data);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Error fetching data:\", error);\n// //       });\n// //   }, []);\n\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n\n\n// // export default TransactionsList;\n\n\n\n\n// // // TransactionsList.js\n\n// // import React, { useEffect, useState } from \"react\";\n// // import Transaction from \"./Transaction\";\n\n// // function TransactionsList({ onUpdateTransactions }) {\n// //   const [transactionsData, setTransactionsData] = useState([]);\n\n// //   useEffect(() => {\n// //     // Fetch data from the provided JSON server\n// //     fetch(\"http://localhost:8001/transactions\")\n// //       .then((response) => {\n// //         if (!response.ok) {\n// //           throw new Error(`HTTP error! Status: ${response.status}`);\n// //         }\n// //         return response.json();\n// //       })\n// //       .then((data) => {\n// //         setTransactionsData(data);\n// //       })\n// //       .catch((error) => {\n// //         console.error(\"Error fetching data:\", error);\n// //       });\n// //   }, []);\n\n// //   // Function to update transactions list after adding a new transaction\n// //   const updateTransactionsList = (newTransaction) => {\n// //     setTransactionsData([...transactionsData, newTransaction]);\n// //     onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n// //   };\n\n// //   return (\n// //     <table className=\"ui celled striped padded table\">\n// //       {/* Existing transactions */}\n// //       <tbody>\n// //         <tr>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Date</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Description</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Category</h3>\n// //           </th>\n// //           <th>\n// //             <h3 className=\"ui center aligned header\">Amount</h3>\n// //           </th>\n// //         </tr>\n// //         {transactionsData.map((transaction) => (\n// //           <Transaction\n// //             key={transaction.id}\n// //             date={transaction.date}\n// //             description={transaction.description}\n// //             category={transaction.category}\n// //             amount={transaction.amount}\n// //           />\n// //         ))}\n// //       </tbody>\n// //     </table>\n// //   );\n// // }\n\n// // export default TransactionsList;\n\n\n\n\n\n// // TransactionsList.js\n\n// import React, { useEffect, useState } from \"react\";\n// import Transaction from \"./Transaction\";\n\n// function TransactionsList({ transactions, onUpdateTransactions }) {\n//   // Function to update transactions list after adding a new transaction\n//   const updateTransactionsList = (newTransaction) => {\n//     onUpdateTransactions([...transactions, newTransaction]); // Update parent state\n//   };\n\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       {/* Existing transactions */}\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {transactions.map((transaction) => (\n//           <Transaction\n//             key={transaction.id}\n//             date={transaction.date}\n//             description={transaction.description}\n//             category={transaction.category}\n//             amount={transaction.amount}\n//           />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// export default TransactionsList;\n\n\n\n\n\n\n// //TransactionsList\n\n// import React, { useEffect, useState } from \"react\";\n// import Transaction from \"./Transaction\";\n\n// function TransactionsList({ onUpdateTransactions }) {\n//   const [transactionsData, setTransactionsData] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch data from the provided JSON server\n//     fetch(\"http://localhost:8001/transactions\")\n//       .then((response) => {\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! Status: ${response.status}`);\n//         }\n//         return response.json();\n//       })\n//       .then((data) => {\n//         setTransactionsData(data);\n//       })\n//       .catch((error) => {\n//         console.error(\"Error fetching data:\", error);\n//       });\n//   }, []);\n\n//   // Function to update transactions list after adding a new transaction\n//   const updateTransactionsList = (newTransaction) => {\n//     setTransactionsData([...transactionsData, newTransaction]);\n//     onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n//   };\n\n//   return (\n//     <table className=\"ui celled striped padded table\">\n//       {/* Existing transactions */}\n//       <tbody>\n//         <tr>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Date</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Description</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Category</h3>\n//           </th>\n//           <th>\n//             <h3 className=\"ui center aligned header\">Amount</h3>\n//           </th>\n//         </tr>\n//         {transactionsData.map((transaction) => (\n//           <Transaction\n//             key={transaction.id}\n//             date={transaction.date}\n//             description={transaction.description}\n//             category={transaction.category}\n//             amount={transaction.amount}\n//           />\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// }\n\n// export default TransactionsList;\n\n\n\n\n\n\nimport React, { useEffect, useState } from \"react\";\nimport Transaction from \"./Transaction\";\nimport Search from \"./Search\";\n\nfunction TransactionsList({ onUpdateTransactions }) {\n  const [transactionsData, setTransactionsData] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    // Fetch data from the provided JSON server\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setTransactionsData(data);\n        filterTransactions(data, searchTerm);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, [searchTerm]);\n\n  // Function to update transactions list after adding a new transaction\n  const updateTransactionsList = (newTransaction) => {\n    setTransactionsData([...transactionsData, newTransaction]);\n    onUpdateTransactions([...transactionsData, newTransaction]); // Update parent state\n    filterTransactions([...transactionsData, newTransaction], searchTerm);\n  };\n\n  const filterTransactions = (data, term) => {\n    const filtered = data.filter((transaction) =>\n      transaction.description.toLowerCase().includes(term.toLowerCase())\n    );\n    setFilteredTransactions(filtered);\n  };\n\n  const handleSearch = (term) => {\n    setSearchTerm(term);\n    filterTransactions(transactionsData, term);\n  };\n\n  return (\n    <div>\n      <Search onSearch={handleSearch} />\n      <table className=\"ui celled striped padded table\">\n        {/* Existing transactions */}\n        <tbody>\n          <tr>\n            <th>\n              <h3 className=\"ui center aligned header\">Date</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Description</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Category</h3>\n            </th>\n            <th>\n              <h3 className=\"ui center aligned header\">Amount</h3>\n            </th>\n          </tr>\n          {filteredTransactions.map((transaction) => (\n            <Transaction\n              key={transaction.id}\n              date={transaction.date}\n              description={transaction.description}\n              category={transaction.category}\n              amount={transaction.amount}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default TransactionsList;\n"]},"metadata":{},"sourceType":"module"}